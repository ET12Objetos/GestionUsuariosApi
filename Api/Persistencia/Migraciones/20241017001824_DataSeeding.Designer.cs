// <auto-generated />
using System;
using Api.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Persistencia.Migraciones
{
    [DbContext(typeof(GestionUsuariosDbContext))]
    [Migration("20241017001824_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Aplicacion.Dominio.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreacionFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreacionUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b78542ef-ed34-47e9-80be-ec42505439b9"),
                            CreacionFecha = new DateTime(2024, 10, 16, 21, 18, 24, 505, DateTimeKind.Local).AddTicks(6421),
                            CreacionUsuario = "",
                            Habilitado = true,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("e1209409-dfa1-48f4-b3ce-ef5eb580754f"),
                            CreacionFecha = new DateTime(2024, 10, 16, 21, 18, 24, 505, DateTimeKind.Local).AddTicks(6423),
                            CreacionUsuario = "",
                            Habilitado = true,
                            Nombre = "Vendedor"
                        },
                        new
                        {
                            Id = new Guid("2960ce73-3316-4c58-9931-2b202e14517e"),
                            CreacionFecha = new DateTime(2024, 10, 16, 21, 18, 24, 505, DateTimeKind.Local).AddTicks(6435),
                            CreacionUsuario = "",
                            Habilitado = true,
                            Nombre = "Legales"
                        });
                });

            modelBuilder.Entity("Aplicacion.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreacionFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreacionUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5a42fca-12c4-4d1b-88d8-103cbd8010b4"),
                            Contraseña = "pass123",
                            CreacionFecha = new DateTime(2024, 10, 16, 21, 18, 24, 505, DateTimeKind.Local).AddTicks(6323),
                            CreacionUsuario = "",
                            Email = "",
                            Habilitado = true,
                            Nombre = "Juan123",
                            NombreCompleto = "Juan Perez"
                        },
                        new
                        {
                            Id = new Guid("891d716d-f5bd-430d-8272-8fcd3ec48a69"),
                            Contraseña = "pass123",
                            CreacionFecha = new DateTime(2024, 10, 16, 21, 18, 24, 505, DateTimeKind.Local).AddTicks(6341),
                            CreacionUsuario = "",
                            Email = "",
                            Habilitado = true,
                            Nombre = "Pablo123",
                            NombreCompleto = "Pablo Lopez"
                        });
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<Guid>("IdRol")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("char(36)");

                    b.HasKey("IdRol", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aplicacion.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
